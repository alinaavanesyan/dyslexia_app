import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:dyslexia_project/screens/home_screen.dart';

class PageViewInstruction extends StatefulWidget {
  const PageViewInstruction({super.key});

  @override
  State<PageViewInstruction> createState() => _PageViewInstructionState();
}

class _PageViewInstructionState extends State<PageViewInstruction>
    with TickerProviderStateMixin {
  late PageController _pageViewController;
  late TabController _tabController;
  int _currentPageIndex = 0;

  @override
  void initState() {
    super.initState();
    _pageViewController = PageController();
    _tabController = TabController(length: 8, vsync: this);
  }

  @override
  void dispose() {
    super.dispose();
    _pageViewController.dispose();
    _tabController.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final TextTheme textTheme = Theme.of(context).textTheme;
    return Stack(
      alignment: Alignment.bottomCenter,
      children: <Widget>[
        Stack(
          fit: StackFit.expand,
          children: [
            Image.asset(
              "assets/images/instruction_back.png",
              fit: BoxFit.cover,
            ),
            PageView(
              controller: _pageViewController,
              onPageChanged: _handlePageViewChanged,
              children: <Widget>[
              Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                     Padding(
                        padding: EdgeInsets.only(top: 45, left: 30, right: 30),
                         child:
                        RichText(
                        text: TextSpan(
                          style: TextStyle(color: Colors.black, fontSize: 20.0),
                          children: <TextSpan>[
                            TextSpan(
                              text: '–ü—Ä–∏–≤–µ—Ç!',
                              style: TextStyle(fontSize: 24.0, fontWeight: FontWeight.bold, color: Color(0xff494646),),
                            ),
                            TextSpan(text: '  –°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ –∑–¥–µ—Å—å –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–æ',
                              style: TextStyle(fontSize: 24.0, color: Color(0xff494646),),),
                          ],
                        ),
                      )
                     ),

                      SizedBox(
                        height: 60
                      ),

                      Image.asset(
                        "assets/finish_gifs/cute-heart.gif",
                        width: 350,
                        height: 350,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                      RichText(
                        text: TextSpan(
                          style: TextStyle(color: Colors.black, fontSize: 20.0),
                          children: <TextSpan>[
                            TextSpan(text: '–ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —É—Ä–æ–∫–∞–º –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π –Ω–∞–≤—ã–∫ —á—Ç–µ–Ω–∏—è üí™',
                              style: TextStyle(fontSize: 20.0, color: Color(0xff494646),),),
                          ],
                        ),
                      )
                      ),

                      SizedBox(
                          height: 30
                      ),

                      Image.asset(
                        "assets/images/inst1.png",
                        width: 450,
                        height: 450,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                        padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                        child:
                        RichText(
                          text: TextSpan(
                            style: TextStyle(color: Colors.black, fontSize: 20.0),
                            children: <TextSpan>[
                              TextSpan(text: '–ö–∞–∂–¥—ã–π —É—Ä–æ–∫ –∏–º–µ–µ—Ç —Å–≤–æ–π –Ω–æ–º–µ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ. –°–ø—Ä–∞–≤–∞ –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —É—Ä–æ–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –±—ã—Å—Ç—Ä–µ–µ —É—Å–≤–æ–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª',
                                style: TextStyle(fontSize: 20.0, color: Color(0xff494646),),),
                            ],
                          ),
                        )
                      ),

                      SizedBox(
                          height: 40
                      ),

                      Image.asset(
                        "assets/images/inst2.png",
                        width: 450,
                        height: 450,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                          RichText(
                            text: TextSpan(
                              style: TextStyle(color: Colors.black, fontSize: 20.0),
                              children: <TextSpan>[
                                TextSpan(text: '–ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∏ –Ω–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è. –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ç–æ–º, —á—Ç–æ –≤—ã–∑–≤–∞–ª–æ —É —Ç–µ–±—è —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Ä–æ–∫–∞',
                                  style: TextStyle(fontSize: 20.0, color: Color(0xff494646),),),
                              ],
                            ),
                          )
                      ),

                      SizedBox(
                          height: 40
                      ),

                      Image.asset(
                        "assets/images/inst3.png",
                        width: 450,
                        height: 450,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                          RichText(
                            text: TextSpan(
                              style: TextStyle(color: Colors.black, fontSize: 20.0),
                              children: <TextSpan>[
                                TextSpan(text: '–ö–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–º–µ–µ—Ç —Ç—Ä–∏ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–æ—ç—Ç–æ–º—É —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ö–æ–¥—è—Ç –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ üòé',
                                  style: TextStyle(fontSize: 20.0, color: Color(0xff494646),),),
                              ],
                            ),
                          )
                      ),

                      SizedBox(
                          height: 40
                      ),

                      Image.asset(
                        "assets/images/inst4.png",
                        width: 450,
                        height: 450,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10, left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                          RichText(
                            text: TextSpan(
                              style: TextStyle(color: Colors.black, fontSize: 20.0),
                              children: <TextSpan>[
                                TextSpan(text: '–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞',
                                  style: TextStyle(fontSize: 20.0, color: Color(0xff494646),),),
                              ],
                            ),
                          )
                      ),

                      SizedBox(
                          height: 40
                      ),

                      Image.asset(
                        "assets/images/inst5.png",
                        width: 450,
                        height: 450,
                      ),
                    ])
            ),

            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),
                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                          RichText(
                            text: TextSpan(
                              style: TextStyle(color: Colors.black, fontSize: 20.0),
                              children: <TextSpan>[

                                TextSpan(text: '–í–æ –≤–∫–ª–∞–¥–∫–µ ‚Äú–ß—Ç–µ–Ω–∏–µ‚Äù –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ç–µ–∫—Å—Ç—ã —Ä–∞–∑–Ω–æ–π –¥–ª–∏–Ω—ã. –¢—ã –º–æ–∂–µ—à—å —á–∏—Ç–∞—Ç—å –∏—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∑–∞–ø–∏—Å—å —Å–≤–æ–µ–≥–æ –ø—Ä–æ—á—Ç–µ–Ω–∏—è, —á—Ç–æ–±—ã —Ç–≤–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å –∏–ª–∏ –ª–æ–≥–æ–ø–µ–¥ –æ—Ü–µ–Ω–∏–ª –µ–µ.',
                                  style: TextStyle(fontSize: 17.0, color: Color(0xff494646),),),

                                TextSpan(text: '\n'),

                                TextSpan(text: '\n'),

                                TextSpan(text: '–¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ü–µ–Ω–∫—É —Å–≤–æ–µ–≥–æ –ø—Ä–æ—á—Ç–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–∞–∂–º–µ—à—å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å. –ù–æ —Ç–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.',
                                  style: TextStyle(fontSize: 17.0, color: Color(0xff494646),),),
                              ],
                            ),
                          )
                      ),

                      SizedBox(
                          height: 5,
                      ),

                      Image.asset(
                        "assets/images/inst6.png",
                        width: 370,
                        height: 450,
                      ),
                    ])
            ),


            Center(
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
                    children: <Widget>[
                      Padding(
                          padding: EdgeInsets.only(top: 10,  left: 200),
                          child: ElevatedButton(
                            onPressed: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(builder: (context) => HomeScreen())
                              );
                            },
                            child: Icon(Icons.close, size: 20,),
                          )),

                      Padding(
                          padding: EdgeInsets.only(top: 20, left: 30, right: 30),
                          child:
                          RichText(
                            text: TextSpan(
                              style: TextStyle(color: Colors.black, fontSize: 20.0),
                              children: <TextSpan>[
                                TextSpan(
                                  text: '–ñ–µ–ª–∞–µ–º —Ç–µ–±–µ —É–¥–∞—á–∏ –≤ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏–π!',
                                  style: TextStyle(fontSize: 24.0, fontWeight: FontWeight.bold, color: Color(0xff494646),),
                                ),

                                TextSpan(text: '\n'),

                                TextSpan(text: '\n'),

                                TextSpan(text: '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è.  –ö –ø–æ–±–µ–¥–µ –∏–¥—É—Ç –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏ –∏ —Ç—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –Ω–∞—á–∞–ª –∑–∞–Ω–∏–º–∞—Ç—å—Å—è!',
                                  style: TextStyle(fontSize: 18.0, color: Color(0xff494646),),),
                              ],
                            ),
                          )
                      ),

                      SizedBox(
                          height: 60
                      ),

                      Image.asset(
                        "assets/finish_gifs/love-cute.gif",
                        width: 350,
                        height: 350,
                      ),
                    ])
            ),

          ],
        ),


        PageIndicator(
          tabController: _tabController,
          currentPageIndex: _currentPageIndex,
          onUpdateCurrentPageIndex: _updateCurrentPageIndex,
          isOnDesktopAndWeb: _isOnDesktopAndWeb,
        ),
      ],
    )]);
  }

  void _handlePageViewChanged(int currentPageIndex) {
    if (!_isOnDesktopAndWeb) {
      return;
    }
    _tabController.index = currentPageIndex;
    setState(() {
      _currentPageIndex = currentPageIndex;
    });
  }

  void _updateCurrentPageIndex(int index) {
    _tabController.index = index;
    _pageViewController.animateToPage(
      index,
      duration: const Duration(milliseconds: 400),
      curve: Curves.easeInOut,
    );
  }

  bool get _isOnDesktopAndWeb {
    if (kIsWeb) {
      return true;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.macOS:
      case TargetPlatform.linux:
      case TargetPlatform.windows:
        return true;
      case TargetPlatform.android:
      case TargetPlatform.iOS:
      case TargetPlatform.fuchsia:
        return false;
    }
  }
}

class PageIndicator extends StatelessWidget {
  const PageIndicator({
    super.key,
    required this.tabController,
    required this.currentPageIndex,
    required this.onUpdateCurrentPageIndex,
    required this.isOnDesktopAndWeb,
  });

  final int currentPageIndex;
  final TabController tabController;
  final void Function(int) onUpdateCurrentPageIndex;
  final bool isOnDesktopAndWeb;

  @override
  Widget build(BuildContext context) {
    if (!isOnDesktopAndWeb) {
      return const SizedBox.shrink();
    }
    final ColorScheme colorScheme = Theme.of(context).colorScheme;

    return Padding(
      padding: const EdgeInsets.all(8.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          IconButton(
            splashRadius: 16.0,
            padding: EdgeInsets.zero,
            onPressed: () {
              if (currentPageIndex == 0) {
                return;
              }
              onUpdateCurrentPageIndex(currentPageIndex - 1);
            },
            icon: const Icon(
              Icons.arrow_left_rounded,
              size: 32.0,
            ),
          ),
          TabPageSelector(
            controller: tabController,
            color: colorScheme.surface,
            selectedColor: colorScheme.primary,
          ),
          IconButton(
            splashRadius: 16.0,
            padding: EdgeInsets.zero,
            onPressed: () {
              if (currentPageIndex == 2) {
                return;
              }
              onUpdateCurrentPageIndex(currentPageIndex + 1);
            },
            icon: const Icon(
              Icons.arrow_right_rounded,
              size: 32.0,
            ),
          ),
        ],
      ),
    );
  }
}
