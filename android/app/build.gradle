//buildscript {
//    ext.kotlin_version = '1.6.0'
//
//    repositories {
//        jcenter()
//        google()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:7.4.2'
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
//}

plugins {
//    id 'com.android.library'
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
//    compileSdkVersion 33
//    minSdkVersion 21
//    targetSdkVersion 33
//    compileSdkVersion rootProject.ext.compileSdkVersion
    namespace = "com.example.dyslexia_project"
    compileSdk = flutter.compileSdkVersion
    // ndkVersion = flutter.ndkVersion
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }


//    kotlinOptions {
//        jvmTarget = '18'
//    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.dyslexia_project"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 24 // flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.debug
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}


dependencies {
//    classpath 'com.android.tools.build:gradle:7.3'
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:32.7.2')

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0'
    implementation "androidx.activity:activity:1.6.0-alpha05"
    implementation 'androidx.activity:activity-ktx:1.6+'
//    implementation 'com.google.gms.google-services'
//    implementation 'com.google.firebase:firebase-appcheck'
//    implementation 'com.google.firebase:firebase-appcheck-safetynet'
  //  implementation 'com.google.android.gms:play-services-analytics:16.0.3'
 //   implementation 'com.google.android.gms:play-services:17.1.0'
//   implementation 'com.google.android.gms:play-services-basement:17.6.0'
//    implementation 'com.google.android.gms:play-services-basement'
// implementation 'com.google.android.gms:play-services-ads:17.0.0'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}


flutter {
    source = "../.."
}


//apply plugin: 'com.google.gms.google-services'